spring.application.name=hello-consumer
server.port=9500
eureka.instance.metadataMap.zone=zone-1
eureka.client.region=cn-bj
eureka.client.prefer-same-zone-eureka=true
eureka.client.service-url.defaultZone=http://pee1:9001/eureka/,http://pee2:9002/eureka/

ribbon.eureka.enabled=false
spring.cloud.loadbalancer.retry.enabled=true
# hello-provider
hello-provider.ribbon.connect-timeout=250
hello-provider.ribbon.read-timeout=1000
hello-provider.ribbon.ok-to-retry-on-all-operations=true
hello-provider.ribbon.max-auto-retries-next-server=3
hello-provider.ribbon.max-auto-retries=1


logging.level.root=info
logging.level.org.springframework.data.redis=debug
logging.level.org.springframework.cache=debug


#redis配置
#Redis数据库索引
#spring.redis.database=1
spring.redis.url=redis://localhost:6379
#连接超时时间,设置成0时取默认时间2s
spring.redis.timeout=2s
#连接池最大连接数（使用负值表示没有限制）
#建议为业务期望QPS/一个连接的QPS,例如50000/1000=50
#一次命令时间(borrow|return resource+Jedis执行命令+网络延迟)的平均耗时约为1ms,一个连接的QPS大约是1000
spring.redis.jedis.pool.max-active=50
#连接池中的最大空闲连接,建议和最大连接数一致,这样做的好处是连接数从不减少,从而避免了连接池伸缩产生的性能开销
spring.redis.jedis.pool.max-idle=50
#连接池中的最小空闲连接
#建议为0，在无请求的状况下从不创建链接
spring.redis.jedis.pool.min-idle=0
#连接池最大阻塞等待时间（-1表示没有限制）
#建议不要为-1，连接池占满后无法获取连接时将在该时间内阻塞等待，超时后将抛出异常
spring.redis.jedis.pool.max-wait=2s